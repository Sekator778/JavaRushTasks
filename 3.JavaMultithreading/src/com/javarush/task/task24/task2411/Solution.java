package com.javarush.task.task24.task2411;

/* 
Вспомним наследование
*/
//
//
//        1. создается экземпляр класса Solution, вызывается его супер-класс C,
//        срабатывает первая команда в конструкторе класса  С – напечатать "C"
//
//        2. срабатывает вторая команда в конструкторе класса C, создается объект B,
//        у него вызывается его супер-класс C, в нем срабатывает команда напечатать "C"
//
//        3. срабатывает команда в классе B – печатается "B"
//
//        4. создается экземпляр класса А, срабатывает команда конструктора напечатать переменную value, которая = "А"
//
//        5. поскольку экземпляр А одновременно является анонимным классом,
//        в нем в блоке инициализации назначается новое значение переменной value = "Y" и срабатывает команда вывода переменной
//
//        6. срабатывает команда конструктора Solution вывести "S"

//CCBAYS.


public class Solution extends C{
    private class A {
        protected String value = "A";

        public A() {
            System.out.print(value);
        }
    }

    private A a = new A() {
        { //у анонимных классов нет своих конструкторов, но что-то можно сделать в блоке инициализации класса
            value = "Y";
            if (super.getClass().getName().contains(".Solution$")) {
                System.out.print(value);
            }
        }
    };

    public Solution() {
        System.out.print("S");
    }

    public static void main(String[] args) {
        new Solution();
    }
}



